{
    "openapi": "3.0.3",
    "info": {
        "title": "Frontend API Spec",
        "version": "0.0.1",
        "description": "What the frontend (with mock api) currently works with. Note that this page uses snake_case in the schemas, whereas the frontend natively uses camelCase, although some versions of the frontend are capable of translating between these."
    },
    "servers": [
        {
            "url": "http://localhost:8000/api",
            "description": "Django"
        },
        {
            "url": "http://localhost:3002/api",
            "description": "Frontend JSON-server"
        }
    ],
    "paths": {
        "/pages": {
            "get": {
                "summary": "get multiple pages",
                "description": "Lists all pages. Response is authentication restricted and only pages that requesting user can view is returned.",
                "responses": {
                    "200": {
                        "description": "OK: List of pages user have view permission to.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Page"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/pages/{id}": {
            "get": {
                "summary": "get single page",
                "description": "Returns a single page based on {id}. Response is authentication restricted.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "Id of page",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/Page/properties/id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK: Page data",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Page"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "BAD REQUEST: Something is wrong with the way you specified the request. See error message for details.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "general.json#/components/schemas/Error"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "UNAUTHORIZED: You do not have access to this recourse (credentials are missing or you do not have permission).",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "general.json#/components/schemas/Error"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "NO CONTENT: No page found with id={id}.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "general.json#/components/schemas/Error"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/resolve-url": {
            "get": {
                "summary": "get multiple redirects",
                "description": "Resolve the page object at a given path. Resolves internal redirects to a page result. Redirects are returned as '302 Found', pages as '200 OK'.",
                "parameters": [
                    {
                        "in": "query",
                        "name": "path",
                        "description": "Path from root to resolve (with or without leading slash and without GET-params.)",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "/namnder/fcom"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK: Page data of page located at the given path. (Not used by mock api)",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Page"
                                }
                            }
                        }
                    },
                    "302": {
                        "description": "FOUND (MOVED TEMPORARILY): Redirect response to the URL specified in an external redirect."
                    },
                    "404": {
                        "description": "NOT FOUND: No page or redirect was found at {path}.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "general.json#/components/schemas/Error"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/site": {
            "get": {
                "summary": "get the site singelton object",
                "description": "Get the site singelton object",
                "responses": {
                    "200": {
                        "description": "OK: Site data",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Site"
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "Site": {
                "type": "object",
                "properties": {
                    "root_url": {
                        "type": "string",
                        "example": "https://f.kth.se/"
                    },
                    "root_page": {
                        "$ref": "#/components/schemas/Page"
                    },
                    "header_content_sv": {
                        "$ref": "#/components/schemas/SiteHeader"
                    },
                    "header_content_en": {
                        "$ref": "#/components/schemas/SiteHeader"
                    },
                    "footer_content_sv": {
                        "$ref": "#/components/schemas/SiteFooter"
                    },
                    "footer_content_en": {
                        "$ref": "#/components/schemas/SiteFooter"
                    }
                }
            },
            "Page": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "minimum": 1,
                        "readOnly": true,
                        "example": 42
                    },
                    "detail_url": {
                        "type": "string",
                        "readOnly": true,
                        "example": "https://f.kth.se/api/pages/42/"
                    },
                    "name": {
                        "type": "string",
                        "maxLength": 255,
                        "example": "NÃ¤mnder"
                    },
                    "slug": {
                        "type": "string",
                        "maxLength": 50,
                        "example": "namnder"
                    },
                    "page_type": {
                        "type": "string",
                        "maxLength": 255,
                        "example": "list_namnder_page"
                    },
                    "parent": {
                        "$ref": "#/components/schemas/MinimalPage"
                    },
                    "children": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/MinimalPage"
                        }
                    },
                    "published": {
                        "type": "boolean",
                        "example": true
                    },
                    "published_at": {
                        "type": "string",
                        "format": "ISO8601 with time zone Z",
                        "example": "2021-03-01T10:59:21.522778+01:00"
                    },
                    "last_edited_at": {
                        "type": "string",
                        "format": "ISO8601 with time zone Z",
                        "example": "2021-03-01T10:59:21.522778+01:00"
                    },
                    "content_sv": {
                        "$ref": "#/components/schemas/ContentObject"
                    },
                    "content_en": {
                        "$ref": "#/components/schemas/ContentObject"
                    }
                },
                "required": [
                    "detail_url",
                    "id",
                    "name",
                    "children",
                    "content_en",
                    "content_sv",
                    "last_edited_at",
                    "page_type",
                    "parent",
                    "published",
                    "published_at",
                    "slug"
                ]
            },
            "MinimalPage": {
                "type": "object",
                "properties": {
                    "id": {
                        "$ref": "#/components/schemas/Page/properties/id"
                    },
                    "detail_url": {
                        "$ref": "#/components/schemas/Page/properties/detail_url"
                    },
                    "name": {
                        "$ref": "#/components/schemas/Page/properties/name"
                    }
                },
                "required": [
                    "id",
                    "detail_url",
                    "name"
                ]
            },
            "MenuItem": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true,
                        "example": 42
                    },
                    "name": {
                        "type": "string",
                        "example": "NÃ¤mnder"
                    },
                    "link": {
                        "type": "string",
                        "nullable": true,
                        "example": "https://f.kth.se/namnder/"
                    },
                    "url": {
                        "type": "string",
                        "example": ""
                    },
                    "page": {
                        "$ref": "#/components/schemas/MinimalPage"
                    },
                    "is_menu": {
                        "type": "boolean",
                        "readOnly": true,
                        "example": false
                    }
                },
                "required": [
                    "id",
                    "name",
                    "link",
                    "is_menu"
                ]
            },
            "Menu": {
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/MenuItem"
                    },
                    {
                        "properties": {
                            "items": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/MenuItem"
                                },
                                "description": "If is_menu is true the object is rendered as a Menu."
                            }
                        }
                    }
                ]
            },
            "Redirect": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true,
                        "example": 1
                    },
                    "detail_url": {
                        "type": "string",
                        "readOnly": true,
                        "example": "https://f.kth.se/api/redirects/1/"
                    },
                    "fromPath": {
                        "type": "string",
                        "example": "/hem"
                    },
                    "link": {
                        "type": "string",
                        "example": "https://f.kth.se/"
                    },
                    "url": {
                        "type": "string",
                        "nullable": true,
                        "example": null
                    },
                    "page": {
                        "$ref": "#/components/schemas/MinimalPage"
                    }
                }
            },
            "ContentObjectBase": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true,
                        "example": 21362
                    },
                    "detail_url": {
                        "type": "string",
                        "readOnly": true,
                        "example": "https://f.kth.se/api/content-object/21362/"
                    },
                    "name": {
                        "type": "string",
                        "example": "sidebar"
                    },
                    "db_type": {
                        "type": "string"
                    },
                    "attributes": {
                        "type": "object",
                        "example": "{\"color\": \"black\"}"
                    }
                },
                "required": [
                    "id",
                    "detail_url",
                    "db_type",
                    "attributes"
                ]
            },
            "ContentObject": {
                "oneOf": [
                    {
                        "$ref": "#/components/schemas/ContentText"
                    },
                    {
                        "$ref": "#/components/schemas/ContentImage"
                    },
                    {
                        "$ref": "#/components/schemas/ContentMenu"
                    },
                    {
                        "$ref": "#/components/schemas/ContentPage"
                    },
                    {
                        "$ref": "#/components/schemas/ContentDict"
                    },
                    {
                        "$ref": "#/components/schemas/ContentList"
                    }
                ]
            },
            "ContentText": {
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/ContentObjectBase"
                    },
                    {
                        "properties": {
                            "db_type": {
                                "type": "string",
                                "example": "text"
                            },
                            "text": {
                                "type": "string",
                                "example": "<h1>En rubriktext</h1>"
                            }
                        }
                    }
                ]
            },
            "ContentImage": {
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/ContentObjectBase"
                    },
                    {
                        "properties": {
                            "db_type": {
                                "type": "string",
                                "example": "image"
                            },
                            "image": {
                                "$ref": "general.json#/components/schemas/Image",
                                "description": "Schema is probably incorrect."
                            }
                        }
                    }
                ]
            },
            "ContentMenu": {
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/ContentObjectBase"
                    },
                    {
                        "properties": {
                            "db_type": {
                                "type": "string",
                                "example": "menu"
                            },
                            "menu": {
                                "$ref": "#/components/schemas/Menu"
                            }
                        }
                    }
                ]
            },
            "ContentPage": {
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/ContentObjectBase"
                    },
                    {
                        "properties": {
                            "db_type": {
                                "type": "string",
                                "example": "page"
                            },
                            "page": {
                                "$ref": "#/components/schemas/MinimalPage"
                            }
                        }
                    }
                ]
            },
            "ContentDict": {
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/ContentObjectBase"
                    },
                    {
                        "properties": {
                            "db_type": {
                                "type": "string",
                                "example": "dict"
                            },
                            "items": {
                                "type": "object",
                                "description": "Dictionary with (obj.name: {obj}) with any of the follwowing types.",
                                "items": {
                                    "$ref": "#/components/schemas/ContentObject"
                                }
                            }
                        }
                    }
                ]
            },
            "ContentList": {
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/ContentObjectBase"
                    },
                    {
                        "properties": {
                            "db_type": {
                                "type": "string",
                                "example": "list"
                            },
                            "items": {
                                "type": "array",
                                "description": "Ordered list with ContentObjects with any of the follwowing types.",
                                "items": {
                                    "$ref": "#/components/schemas/ContentObject"
                                }
                            }
                        }
                    }
                ]
            },
            "SiteHeader": {
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/ContentDict"
                    },
                    {
                        "properties": {
                            "items": {
                                "type": "object",
                                "properties": {
                                    "name": {
                                        "type": "string"
                                    },
                                    "logo": {
                                        "$ref": "#/components/schemas/ContentImage"
                                    }
                                }
                            }
                        }
                    }
                ]
            },
            "SiteFooter": {
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/ContentDict"
                    },
                    {
                        "properties": {
                            "items": {
                                "type": "object",
                                "properties": {
                                    "webMaster": {
                                        "$ref": "#/components/schemas/ContentText"
                                    },
                                    "currYear": {
                                        "$ref": "#/components/schemas/ContentText"
                                    },
                                    "address": {
                                        "$ref": "#/components/schemas/ContentText"
                                    }
                                }
                            }
                        }
                    }
                ]
            }
        }
    }
}